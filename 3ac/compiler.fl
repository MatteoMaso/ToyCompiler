%option noyywrap
%{
#include <stdlib.h>
#include <string.h>
#include "compiler.h"
%}

%s 	STARTCOMMENT

digit     		[0-9]
uc        		[A-Z]    
lc        		[a-z]    
letter	  		{uc}|{lc} 
ws        		[ \t\n]
eoi       		[;]
sc        		[_$@-]
newline	  		[\n]
startcomment    	"/*"
endcomment		"*/"
startOneLineComment 	"//"


id          	{lc}({letter}*|{digit}*|{sc}*)*
fract       	{digit}+(\.{digit}+)?



comment         [^*|\n]
oneLineComment  {startOneLineComment}(.)*{newline}

%% /*---------------------------------------------------REGOLE------------------------------------*/


{startcomment}			{ BEGIN STARTCOMMENT; }
<STARTCOMMENT>{comment}* 	{ }
<STARTCOMMENT>("*")|("||")	{ }
<STARTCOMMENT>{endcomment} 	{ BEGIN 0; }
{oneLineComment} 		{ }

[ \t\n]			{ /* skip blanks */ }

"double"		{ return TYPE_DOUBLE; }
"if"		 	{ return IF; }
"else"		 	{ return ELSE; }
"while"			{ return WHILE; }
"stampa"		{ return PRINT; }
"&&"			{ return AND; }
"||"			{ return OR; }
"!"			{ return NOT; }
"<"			{ return LT; }
"<="			{ return LE; }
">"			{ return GT; }
">="			{ return GE; }
"=="			{ return EQ; }
"!="			{ return NEQ; }
"+"             	{ return '+'; }
"-"			{ return '-'; }
"*"			{ return '*'; }
"/"			{ return '/'; }
{id}			{ yylval.string = strdup(yytext); return ID; }
{fract}			{ yylval.val = atof(yytext); return DOUBLE; }
\n|.			{ return yytext[0]; }
